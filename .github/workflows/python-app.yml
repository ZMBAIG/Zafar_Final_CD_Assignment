# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
#      # Add SSH Key
#     - name: Add SSH key
#       uses: shimataro/ssh-key-action@v2
#       with:
#           key: ${{ secrets.SSH_PRIVATE_KEY }} 
#           known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
#       # Add it to known hosts
#     - name: Adding known hosts
#       run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
#       # Copy dist folder with Rsync
#     - name: Deploy with Rsync
#       run: rsync -avz ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/Baig_Final_CD_Assignment-01/
#     - name: Restart Application
#       run: ssh -t ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'systemctl restart Baig_Final_CD_Assignment-01'


        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            -   run: ls -la
            -   uses: actions/checkout@master

            -   run: apt-get install rsync
           
            -   name: Deploy theme on server
                id: deploy_theme
                uses: Pendect/action-rsyncer@v1.1.0
                env:
                    DEPLOY_KEY: ${{secrets.SSH_PRIVATE_KEY}}
                with:
                    flags: '-avc --delete'
                    src: 'dist/'
                    dest: 'root@"${{secrets.SERVER_IP}}":/path/on/remote'

            -   name: Display status from deploy
                run: echo "${{ steps.deploy.outputs.status }}"
   
    
    
        
